{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","rating","runtime","genres","className","src","alt","map","genre","i","key","slice","prototypes","id","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getmovies","a","axios","get","data","setState","this","movie","medium_cover_image","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAIA,SAASA,EAAT,GAA2E,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC9D,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKM,UAAU,eACb,wBAAIA,UAAU,gBAAgBN,GAC9B,uBAAGM,UAAU,yBAAyBP,EAAtC,KAA8CK,EAA9C,WACA,wBAAIE,UAAU,UACZD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAe,wBAAIC,IAAKD,EAAGL,UAAU,iBAAiBI,OAGnE,uBAAGJ,UAAU,iBAAiBH,GAC9B,uBAAGG,UAAU,kBAAkBL,EAAQY,MAAM,EAAG,KAAhD,SAMRf,EAAMgB,WAAa,CACjBC,GAAIC,IAAUC,OAAOC,WACrBnB,KAAMiB,IAAUC,OAAOC,WACvBlB,MAAOgB,IAAUG,OAAOD,WACxBjB,QAASe,IAAUG,OAAOD,WAC1BhB,OAAQc,IAAUG,OAAOD,WACzBf,OAAQa,IAAUC,OAAOC,WACzBd,QAASY,IAAUC,OAAOC,WAC1Bb,OAAQW,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BpB,QCoCAuB,G,kNA/DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAMVC,U,sBAAY,8BAAAC,EAAA,sEAWAC,IAAMC,IACd,2DAZQ,gBASEJ,EATF,EAQRK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAdzB,2C,kEAkBVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAGnB,OACE,6BAASlB,UAAU,aAChBiB,EACC,yBAAKjB,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UACZkB,EAAOf,KAAI,SAAAuB,GACV,OACE,kBAAC,EAAD,CACEpB,IAAKoB,EAAMjB,GACXA,GAAIiB,EAAMjB,GACVhB,KAAMiC,EAAMjC,KACZC,MAAOgC,EAAMhC,MACbC,QAAS+B,EAAM/B,QACfC,OAAQ8B,EAAMC,mBACd7B,QAAS4B,EAAM5B,QACfD,OAAQ6B,EAAM7B,OACdE,OAAQ2B,EAAM3B,kB,GArDd6B,cCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.43448913.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, rating, runtime, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}/>\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <p className=\"movie__yearAndRuntime\">{year}, {runtime}minutes</p>\r\n        <ul className=\"genres\">\r\n         {genres.map((genre, i) => (<li key={i} className=\"genres__genre\">{genre}</li>))}\r\n         {/* map api는 key를 필요로함! */}\r\n        </ul>\r\n        <p className=\"movie__rating\">{rating}</p>\r\n        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.prototypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  runtime: PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    isLoading: true, //mount 되고 난 후 true\n    movies: [],\n  };\n\n  //render하고나서 제일 먼저 실행되는 것\n  //didmount에서 data fetch할거임\n\n  getmovies = async () => {\n    //axios는 fetch위의 layer와 같음....음...?\n    //axios가 데이터를 가져오는데 시가이 걸릴수도 있으므로, 시간이 거릴룻 있다는걸 알려주어야함.\n    //>>> async(이 함수가 비동기)와 await(await axios == axios 기다림)추가\n\n    // const moives = await axios.get(\"http://yts-proxy.now.sh/list_movies.json\");\n    // console.log(moives.data.data.movies);\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"http://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getmovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    // isLoading from this.state\n    ///EC6 나중에 확인해보기!!!!!!!!!!!!!\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  runtime={movie.runtime}\n                  rating={movie.rating}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// component는 html을 반환하는 함수\n// jsx. javascript와 html의 조합.\n// component를 사용하여 html형태로 작성.\n"],"sourceRoot":""}